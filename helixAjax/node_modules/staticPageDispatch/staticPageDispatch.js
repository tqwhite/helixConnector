'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util'),
	fs = require('fs');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.metaData = {};
	this.addMeta = function(name, data) {
		this.metaData[name] = data;
	}

	qtools.validateProperties({
		subject: args || {},
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'router',
				optional: false
			},
			{
				name: 'filePathList',
				optional: false
			}
		]
	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};

	//LOCAL FUNCTIONS ====================================

	var sendTestInputPage = function(req, res, next) {
		var pageIndex=req.path.match(/\w+$/)[0]
			fileName=self.pageList[pageIndex].fileName,
			fileDirectoryPath=self.pageList[pageIndex].fileDirectoryPath;
		
		res.status('200').sendFile(fileDirectoryPath + '/'+fileName + '.html');
	};

	self.pageList={};

	for (var i = 0, len = self.filePathList.length; i < len; i++) {
		var fileDirectoryPath = self.filePathList[i];

		fileDirectoryPath = fileDirectoryPath.replace(/.*\/\.js$/, '');
		var files = fs.readdirSync(fileDirectoryPath);

		for (var j = 0, len2 = files.length; j < len2; j++) {
			var element = files[j];
			if (element.match(/.html$/)) {
				var fileName = element.replace(/\.html$/, '');
				self.pageList[fileName]={
					fileName:fileName,
					fileDirectoryPath:fileDirectoryPath
				}
				
				
				self.router.get(new RegExp('/' + fileName), function(req, res, next) {
					sendTestInputPage(req, res, next);
					return;
				});

			}
		}

	}


	//METHODS AND PROPERTIES ====================================

	//INITIALIZATION ====================================

	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;

